rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isValidContentType() {
      return request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('video/.*') ||
             request.resource.contentType.matches('audio/.*') ||
             request.resource.contentType.matches('application/.*');
    }

    function isValidFileSize() {
      return request.resource.size < 100 * 1024 * 1024; // 100MB max
    }

    // Chat media files
    match /chats/{chatId}/{fileName} {
      allow read: if isAuthenticated() && 
                    exists(/databases/(default)/documents/chats/$(chatId)) &&
                    request.auth.uid in get(/databases/(default)/documents/chats/$(chatId)).data.participants;
      
      allow create: if isAuthenticated() && 
                     exists(/databases/(default)/documents/chats/$(chatId)) &&
                     request.auth.uid in get(/databases/(default)/documents/chats/$(chatId)).data.participants &&
                     isValidContentType() &&
                     isValidFileSize();
      
      allow delete: if isAuthenticated() &&
                     exists(/databases/(default)/documents/chats/$(chatId)) &&
                     (request.auth.uid in get(/databases/(default)/documents/chats/$(chatId)).data.participants ||
                      request.auth.uid == resource.metadata.userId);
    }

    // User profile pictures
    match /users/{userId}/profile/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && isOwner(userId) &&
                     request.resource.contentType.matches('image/.*') &&
                     request.resource.size < 5 * 1024 * 1024; // 5MB max
    }

    // Temporary uploads (for processing)
    match /temp/{userId}/{fileName} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }
  }
}